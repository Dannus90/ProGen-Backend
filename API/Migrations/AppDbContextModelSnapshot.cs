// <auto-generated />

using System;
using Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    internal class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.2.21154.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Core.Domain.DbModels.RefreshToken", b =>
            {
                b.Property<string>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("CHAR(36)")
                    .HasColumnName("id");

                b.Property<string>("Token")
                    .IsRequired()
                    .HasColumnType("TEXT")
                    .HasColumnName("refresh_token");

                b.Property<DateTime>("TokenSetAt")
                    .ValueGeneratedOnAddOrUpdate()
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("token_set_at")
                    .HasDefaultValueSql("NOW()");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("Char(36)")
                    .HasColumnName("user_id");

                b.HasKey("Id");

                b.HasIndex("Token");

                b.HasIndex("UserId")
                    .IsUnique();

                b.ToTable("refresh_token");
            });

            modelBuilder.Entity("Core.Domain.DbModels.User", b =>
            {
                b.Property<string>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("CHAR(36)")
                    .HasColumnName("id");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("created_at")
                    .HasDefaultValueSql("NOW()");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("CHAR(128)")
                    .HasColumnName("email");

                b.Property<DateTime?>("LastLogin")
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("last_login");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("CHAR(500)")
                    .HasColumnName("password");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAddOrUpdate()
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("updated_at")
                    .HasDefaultValueSql("NOW()");

                b.HasKey("Id");

                b.HasIndex("Email")
                    .IsUnique();

                b.ToTable("user_base");
            });

            modelBuilder.Entity("Core.Domain.DbModels.RefreshToken", b =>
            {
                b.HasOne("Core.Domain.DbModels.User", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}